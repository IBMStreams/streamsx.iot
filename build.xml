<project name="streamsx.iot" default="all" basedir=".">
    <description>
        Build file for streamsx.iot project, built the toolkits and samples.
    </description>
  <!-- set global properties for this build -->
  <property environment="env" />
  <property name="streams.install" value="${env.STREAMS_INSTALL}" />
  <property name="toolkit" location="com.ibm.streamsx.iot"/>
  <property name="release.base" location="release-${ant.project.name}-" />
  <property name="toolkit.test" location="tests" />

  <property name="src.dir" value="src/main/java" />
  <property name="build.dir" value="classes" />
  <property name="lib.dir" value="${toolkit}/lib" />
  <property name="jarfile" value="com.ibm.streamsx.iot.jar" />
  <property name="iot.manifest" value="${build.dir}/MANIFEST.MF" />

  <path id="cp.streams">
    <pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
    <pathelement location="${streams.install}/toolkits/com.ibm.streamsx.topology/lib/com.ibm.streamsx.topology.jar" />
  </path>

  <path id="cp.opt">
    <path location="${toolkit}/opt/datetime/com.ibm.streamsx.datetime.jar" />
  </path>

  <path id="cp.compile">
    <path refid="cp.streams" />
    <path refid="cp.opt" />
  </path>

	
  <target name="all" depends="jar,toolkit, samples, spldoc_work, toolkitIndexOnly"/>

  <target name="init">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${lib.dir}" />
  </target>

  <target name="setcommitversion">
    <!-- Create the time stamp -->
    <tstamp/>

    <!-- Extract the git commit hash -->
    <exec executable="git" outputproperty="commithash">
        <arg value="rev-parse"/>
        <arg value="--short"/>
        <arg value="HEAD"/>
    </exec>

     <!-- Update the info.xml -->
     <replace file="${toolkit}/info.xml" token="__dev__" value="commit_${commithash}" summary="yes"/>

    <!-- Extract info from the toolkit's info.xml -->
    <xmlproperty file="${toolkit}/info.xml" prefix="tkinfo" keepRoot="no"/>

    <echo message="Toolkit Version: ${tkinfo.info:identity.info:version}"/>
    <echo message="Git Hash: ${commithash}"/>
     
  </target>

   <target name="revertversion">
    <exec executable="git">
        <arg value="checkout"/>
        <arg value="--"/>
        <arg value="${toolkit}/info.xml"/>
    </exec>
    </target>

  <target name="clean" depends="cleansamples,clean-all-samples"
        description="clean up" >
        <delete includeemptydirs="true">
          <fileset dir="${basedir}" includes="release-*/"/>
        </delete>
  	<ant dir="${toolkit}" target="clean"/>
        <ant dir="${toolkit.test}" target="clean"/>
	<delete dir="${build.dir}" />
	<delete dir="${lib.dir}" />
  </target>

  <target name="toolkit"
        description="Build any code and index the toolkit." >
  	<ant dir="${toolkit}" target="all"/>
  </target>
  
  <target name="toolkitIndexOnly" description="Index the toolkit.">
  		<ant dir="${toolkit}" target="cleanToolkitxml" /> 
        <ant dir="${toolkit}" target="indextoolkit" /> 
  </target> 	

  <target name="spldoc" depends="setcommitversion, spldoc_work, revertversion"
    description="Create SPLDOC with git commit hash included in the version"
  />

  <target name="spldoc_work" depends="setcommitversion"
    description="Create SPLDOC"
  >
    <antcall target="spldoctoolkit">
       <param name="tkdir" value="${toolkit}"/>
       <param name="tktitle" value="IBMStreams ${tkinfo.info:identity.info:name} Toolkit"/>
       <param name="tksource" value=""/>
    </antcall>
    <subant target="spldoctoolkit" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>

  <target name="samples" depends="toolkit">
    <subant target="indextoolkit" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>
  <target name="cleansamples">
    <subant target="cleantoolkit" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>

  <target name="build-all-samples" depends="toolkit">
    <subant target="buildsample" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>
  <target name="clean-all-samples">
    <subant target="cleansample" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>

  <!-- Test targets -->
  <target name="tests" depends="toolkit">
     <ant dir="${toolkit.test}" target="test"/>
  </target>


  <!-- Targets called on samples -->
  <target name="buildsample">
  <!-- nothing to build
     <echo message="Sample to build: ${basedir}"/>
     <exec executable="make" failonerror="true" dir="${basedir}">
        <arg value="-f" />
        <arg value="Makefile" />
        <arg value="all" />
     </exec>
  -->
  </target>
  <target name="cleansample">
     <echo message="Sample to clean: ${basedir}"/>
  <!-- nothing to build
     <exec executable="make" failonerror="true" dir="${basedir}">
        <arg value="-f" />
        <arg value="Makefile" />
        <arg value="clean" />
     </exec>
     -->
  </target>
  <target name="indextoolkit">
     <echo message="Tookit to index: ${basedir}"/>
     <exec executable="${streams.install}/bin/spl-make-toolkit">
        <arg value="--directory"/>
        <arg value="${basedir}"/>
        <arg value="-m"/>
     </exec>
  </target>
  <target name="cleantoolkit">
     <echo message="Tookit to clean: ${basedir}"/>
     <exec executable="${streams.install}/bin/spl-make-toolkit">
        <arg value="--clean"/>
        <arg value="--directory"/>
        <arg value="${basedir}"/>
     </exec>
     <delete dir="${basedir}/output" quiet="true"/>
  </target>
  <target name="spldoctoolkit">
     <property name="tkdir" value="${basedir}"/>
     <property name="tksource" value="--include-source"/>
     <echo message="Tookit to SPLDOC: ${tkdir}"/>
     <exec executable="${streams.install}/bin/spl-make-doc">
        <arg value="--warn-no-comments"/>
        <arg value="--include-composite-operator-diagram"/>
        <arg value="--copy-image-files"/>
	<arg value="${tksource}"/>
        <arg value="--author"/>
        <arg value="IBMStreams Open Source Community at GitHub - https://github.com/IBMStreams/${ant.project.name}"/>
        <arg value="--doc-title"/>
        <arg value="${tktitle}"/>
        <arg value="--directory"/>
        <arg value="${tkdir}"/>
     </exec>
  </target>

  <!-- Targets to build releases -->
  <target name="release"  depends="clean,setcommitversion,create_release_bundle,revertversion,toolkitIndexOnly"/>
  <target name="create_release_bundle"  depends="all">
        <property name="release.dir" location="${release.base}${commithash}" />
	<mkdir dir="${release.dir}" />
        <property name="releasefilename" value="${release.dir}/streamsx.iot.toolkits-${tkinfo.info:identity.info:version}-${DSTAMP}-${TSTAMP}.tgz"/>
    	<tar compression="gzip" longfile="gnu"
             destfile="${releasefilename}"
    	     basedir="${basedir}"
             includes="${tkinfo.info:identity.info:name}/** samples/**"
             excludes="**/.gitignore **/.settings/** **/.settings **/.project **/.classpath"
    	/>
        <checksum file="${releasefilename}"/>
        <checksum algorithm="sha1" file="${releasefilename}"/>
    </target>

  <target name="compile" depends="init">
    <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true"
	includeantruntime="no">
	<classpath>
          <path refid="cp.compile" />
	</classpath>
    </javac>
   </target>

   <target name="jar" depends="compile">
        <manifestclasspath property="iot.jar.classpath"
             jarfile="${lib.dir}/${jarfile}">
                 <classpath refid="cp.opt"/>
        </manifestclasspath>
        <manifest file="${iot.manifest}">
         <attribute name="Class-Path" value="${iot.jar.classpath}"/>
        </manifest>

	<jar destfile="${lib.dir}/${jarfile}" filesonly="true" manifest="${iot.manifest}">
			<fileset dir="${build.dir}" includes="com/ibm/streamsx/iot/**"/>
			<fileset dir="${src.dir}" includes="com/ibm/streamsx/iot/i18n/*.properties"/>
	</jar>
	<delete dir="${build.dir}" />

    </target>

    <target name="javadoc">
       <javadoc destdir="${basedir}/doc/javadoc" classpathref="cp.streams"
          Overview="${src.dir}/overview.html"
          Windowtitle="Java API for com.ibm.streamsx.iot"
          Footer="streamsx.iot @ IBMStreams GitHub"
          failonwarning="yes"
          linksource="yes"
          additionalparam="-Xdoclint:none">
            <fileset dir="${src.dir}">
               <include name="com/ibm/streamsx/iot/**"/>
            </fileset>
           <group title="API" packages="com.ibm.streamsx.iot:com.ibm.streamsx.iot.spl"/>
           <group title="Samples" packages="com.ibm.streamsx.iot.sample"/>

       </javadoc>
    </target>

</project>
