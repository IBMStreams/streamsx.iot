<?xml version="1.0" encoding="UTF-8"?>
<project name="streamsx.iot.test" default="test">

	<property environment="env"/>
	<property name="streams.install" value="${env.STREAMS_INSTALL}"/>

	<property name="iot.tk"
	   location="${basedir}/../com.ibm.streamsx.iot"/>
	<property name="streams.tk"
	   location="${streams.install}/toolkits"/>
	<property name="extra.tk"
	   location="${env.HOME}/toolkits"/>
	<property name="sabs"
	   location="${basedir}/sabs"/>
	<property name="quarks"
	   location="${basedir}/ext/quarks/target/java8"/>

   <!-- get junit jars path if it is not set in global CLASSPATH -->
   <!-- local environment may hav set the junit.jar and hamcrest-core.jar -->
   <!-- in their environment CLASSPATH variable             -->
   <!-- in nested build setup it may be defined at ant call -->
	<condition property="junit.jar.location"
			   value="${JUNIT_JAR}"
			   else="">
		<isset property="JUNIT_JAR" />
	</condition>
	<condition property="hamcrest.jar.location"
			   value="${HAMCREST_JAR}"
			   else="">
		<isset property="HAMCREST_JAR" />
	</condition>

<!-- read WatsonIoT application-credentials from properties file -->
  <property file="${basedir}/iotf.properties"/>

  <property name="testsrc.dir" value="src/test/java" />
  <property name="testbuild.dir" value="classes" />

<!-- 
  if this build.xml is called from another build.xml the reports directory can be set from outside
-->
	<condition property="testreports.dir"
			   value="${TESTREPORT_DIR}"
			   else="reports">
		<isset property="TESTREPORT_DIR" />
	</condition>

  <path id="cp.streams">
    <pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
    <pathelement location="${user.home}/toolkits/com.ibm.streamsx.topology/lib/com.ibm.streamsx.topology.jar" />
    <pathelement location="${streams.install}/toolkits/com.ibm.streamsx.topology/lib/com.ibm.streamsx.topology.jar" />
  </path>

   <path id="cp.junit">
		<pathelement location="${junit.jar.location}" />
		<pathelement location="${hamcrest.jar.location}" />
   </path>

  <path id="cp.compile">
    <path refid="cp.streams" />
    <path refid="cp.quarks" />
    <path refid="cp.junit" />
    <pathelement location="../com.ibm.streamsx.iot/lib/com.ibm.streamsx.iot.jar" />
    <pathelement location="../../../github/streamsx.iot/com.ibm.streamsx.iot/lib/com.ibm.streamsx.iot.jar" />
    <!-- when called in production the toolkit will be available already in 
         STREAMS_INSTALL environment 
    TODO: insert printout which jar is used local or STREAMS_INSTALL
    -->
    <pathelement location="${streams.install}/toolkits/com.ibm.streamsx.iot/lib/com.ibm.streamsx.iot.jar" />
  </path>

  <path id="cp.quarks">
    <pathelement location="${quarks}/lib/quarks.providers.direct.jar"/>
    <pathelement location="${quarks}/connectors/iotf/lib/quarks.connectors.iotf.jar"/>
  </path>

       <target name="test" depends="init,build.spl.apps,build.sample.apps,unittests,e2etests"/>

       <target name="init" depends="clean">
          <mkdir dir="${sabs}"/>
          <mkdir dir="${testbuild.dir}"/>
          <mkdir dir="${testreports.dir}"/>
       </target>

  <target name="compile" depends="init">
    <javac srcdir="${testsrc.dir}" destdir="${testbuild.dir}" debug="true"
	includeantruntime="yes" source="1.8" target="1.8">
	<classpath>
          <path refid="cp.compile" />
	</classpath>
    </javac>
   </target>

   <target name="test-full" depends="e2etests,unittests">
   </target>

   <target name="unittests" depends="compile">
   <property name="streamsx.iot.test.device.cfg" value="skip"/>
   <junit fork="yes" printsummary="yes" haltonfailure="no" dir="${sabs}">
     <sysproperty key="streamsx.iot.test.device.cfg"
                  value="${streamsx.iot.test.device.cfg}"/>
     <classpath>
         <pathelement location="${testbuild.dir}"/>
         <path refid="cp.compile"/>
     </classpath>
    <!-- <formatter type="xml"/> -->
    <formatter type="plain"/>
    <batchtest todir="${testreports.dir}">
      <fileset dir="${testsrc.dir}">
         <include name="**/*Test.java"/>
         <exclude name="**/Watson*Test.java"/>
      </fileset>
    </batchtest>
    </junit>
    </target>


   <!-- perform tests which use Bluemix WatsonIoT platform           --> 
   <!-- precondition is a running PlatformIoT HUB application         -->
   <!-- event test create an Edgent application which works as device -->
   <!-- result received by topology application is checked against    -->
   <!-- the expected values derived from Edgent sent data             -->
   <target name="e2etests" depends="compile,submit.hubapp">
      <!-- WatsonIot device-ceredentials for fix DeviceType: Test, DeviceId:Test001-->
      <property name="streamsx.iot.test.device.cfg" value="${basedir}/device.cfg"/>
      <junit fork="yes" printsummary="yes" haltonfailure="no" dir="${sabs}">
         <sysproperty key="streamsx.iot.test.device.cfg"
                     value="${streamsx.iot.test.device.cfg}"/>
         <classpath>
            <pathelement location="${testbuild.dir}"/>
            <path refid="cp.compile"/>
         </classpath>
         <!-- <formatter type="xml"/> -->
         <formatter type="plain"/>
         <batchtest todir="${testreports.dir}">
            <fileset dir="${testsrc.dir}">
               <include name="**/Watson*Test.java"/>
            </fileset>
         </batchtest>
      </junit>
      <antcall target="cancel.hubapp"/>
   </target>

	<!-- Compile the applications within the toolkit -->
	<target name="build.spl.apps" depends="init">
	  <build.iot.app
  	    namespace="com.ibm.streamsx.iot.watson.apps"
  	    composite="IotPlatform" />
	  <build.iot.app
  	    namespace="com.ibm.streamsx.iot.apps"
  	    composite="ViewAllDevices" />
	</target>

	<!-- Compile the sample applications -->
	<target name="build.sample.apps" depends="init">
	  <build.sample.app
  	    toolkit="${basedir}/../samples/CountEvents"
  	    namespace="com.ibm.streamsx.iot.sample.countevents"
  	    composite="CountEvents" />
	  <build.sample.app
  	    toolkit="${basedir}/../samples/Edgent"
  	    namespace="com.ibm.streamsx.iot.sample.edgent"
  	    composite="IotpSensors" />
	</target>

    <target name="clean">
        <delete dir="${basedir}/output"/>
        <delete dir="${sabs}"/>
        <delete dir="${testbuild.dir}"/>
        <delete dir="${testreports.dir}"/>
    </target>

   <!-- submit SAB file by executing streamtool direct from ant -->
	<macrodef name="submit.iot.app">
      <attribute name="namespace"/>
      <attribute name="composite"/>
      <sequential>
   	   <exec executable="streamtool" dir="${basedir}" failonerror="true">
            <arg value="submitjob"/>
            <arg value="--outfile"/>
            <arg value="jobids.out"/>
            <arg value="--P"/>
            <arg value="org=${iot.org}"/>
            <arg value="--P"/>
	         <arg value="authKey=${iot.authKey}"/>
            <arg value="--P"/>
	         <arg value="authToken=${iot.authToken}"/>
	         <arg value="${sabs}/@{namespace}.@{composite}.sab"/>
         </exec>
      </sequential>
   </macrodef>

   <!-- SPL compile by execute sc direct from ant -->
   <macrodef name="splcompile">
      <attribute name="toolkitlocations"/>
      <attribute name="maincomposite"/>
      <sequential>
         <exec executable="sc" failonerror="true">
            <arg value="-M"/>
            <arg value="@{maincomposite}"/>
            <arg value="-t"/>
	         <arg value="@{toolkitlocations}"/>
            <arg value="--no-toolkit-indexing"/>
      		<arg value="--optimized-code-generation"/>
         </exec>
      </sequential>
   </macrodef>

   <!-- compile sample applications -->
   <macrodef name="build.sample.app">
      <attribute name="toolkit"/>
      <attribute name="namespace"/>
      <attribute name="composite"/>
      <sequential>
         <splcompile 
			   mainComposite="@{namespace}::@{composite}"
			   toolkitlocations="@{toolkit}:${iot.tk}:${extra.tk}:${streams.tk}"/>
         <move file="${basedir}/output/@{namespace}.@{composite}.sab"
             toDir="${sabs}"/>
         <delete dir="${basedir}/output"/>
      </sequential>
   </macrodef>

   <!-- compile application being part of toolkit -->
   <macrodef name="build.iot.app">
      <attribute name="namespace"/>
      <attribute name="composite"/>
      <sequential>
         <splcompile
            mainComposite="@{namespace}::@{composite}"
            toolkitlocations="${iot.tk}:${extra.tk}:${streams.tk}"/>
         <move file="${basedir}/output/@{namespace}.@{composite}.sab"
             toDir="${sabs}"/>
         <delete dir="${basedir}/output"/>
      </sequential>
   </macrodef>

	<!-- Submit the IoTPlatform HUB applications -->
	<target name="submit.hubapp" depends="build.spl.apps"> 
	  <submit.iot.app
  	    namespace="com.ibm.streamsx.iot.watson.apps"
  	    composite="IotPlatform" />
	</target>

	<!-- Cancel the IoTPlatform HUB application job -->
   <target name="cancel.hubapp">
      <exec executable="streamtool" dir="${basedir}" failonerror="true">
         <arg value="canceljob"/>
         <arg value="-f"/>
         <arg value="jobids.out"/>
      </exec>
      <delete file="jobids.out"/>
   </target>

</project>

