/*
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2016
 */

namespace com.ibm.streamsx.iotf.quarks;

use com.ibm.streamsx.iotf::*;

type AggInfo = float64 MAX, float64 MIN, float64 MEAN, float64 STDDEV;
type SensorInfo = rstring name, AggInfo reading;

/**
 * Application that matches the Quarks sample
 * quarks.samples.connectors.iotf.IotfSensors.
*/
public composite IotfSensors {
  graph

   stream<DeviceEvent> SensorEventsJson = EventsSubscribe() {
       param
        eventIds: ["sensors"];
   }

   @view(name = "SensorEvents", port = SensorEvents, sampleSize = 5, bufferSize = 50)
   stream<DeviceEventTs, SensorInfo> SensorEvents = DeviceEventExtractData(SensorEventsJson) {
       param
          dataType: SensorInfo;
   }
   stream<DeviceCmd> SensorWarning = Functor(SensorEvents) {
       output SensorWarning:
          cmdId = "display",
          jsonString = "{\"msg\": \"Alert!" + name + "=" + ((rstring) reading.MEAN) + "\"}";
   }

   @view(name = "SensorWarnings", port = Cmds, sampleSize = 5, bufferSize = 50)
   stream<DeviceCmd> Cmds = DeDuplicate(SensorWarning) {
       param
       timeOut: 8.0;
   }

   () as PublishWarning = CommandPublish(Cmds) { }
}
